apply from: rootProject.rootDir.getAbsolutePath() + "/gradles/utils.gradle"

ext {
    gradlesPath = rootProject.rootDir.getAbsolutePath() + "/gradles/"
}

/** ******************************************************************************************/
buildscript {
    apply from: rootProject.rootDir.getAbsolutePath() + "/gradles/const.gradle"

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/** ******************************************************************************************/

allprojects {
    group rootProject.name
    version "1.0.0-SNAPSHOT"

    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/repository/public" }
        maven { url "https://mirrors.huaweicloud.com/repository/maven/" }
    }
}

subprojects {
    configurations.all {
        all*.exclude group: "ch.qos.logback"

        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy {
            force "com.google.guava:guava:${guavaVersion}"
            force "io.netty:netty-all:${nettyVersion}"

            force("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
            force("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
            force("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
        }
    }
}

configure(getJavaProjects()) {
    apply from: gradlesPath + "java.gradle"
}

/** ******************************************************************************************/
